import numpy as np
import matplotlib.pyplot as plt

from math import log


num = np.linspace(1, 10, 100)

print(len(num))
print(num)

"""
output:
100

[ 1.          1.09090909  1.18181818  1.27272727  1.36363636  1.45454545
  1.54545455  1.63636364  1.72727273  1.81818182  1.90909091  2.
  2.09090909  2.18181818  2.27272727  2.36363636  2.45454545  2.54545455
  2.63636364  2.72727273  2.81818182  2.90909091  3.          3.09090909
  3.18181818  3.27272727  3.36363636  3.45454545  3.54545455  3.63636364
  3.72727273  3.81818182  3.90909091  4.          4.09090909  4.18181818
  4.27272727  4.36363636  4.45454545  4.54545455  4.63636364  4.72727273
  4.81818182  4.90909091  5.          5.09090909  5.18181818  5.27272727
  5.36363636  5.45454545  5.54545455  5.63636364  5.72727273  5.81818182
  5.90909091  6.          6.09090909  6.18181818  6.27272727  6.36363636
  6.45454545  6.54545455  6.63636364  6.72727273  6.81818182  6.90909091
  7.          7.09090909  7.18181818  7.27272727  7.36363636  7.45454545
  7.54545455  7.63636364  7.72727273  7.81818182  7.90909091  8.
  8.09090909  8.18181818  8.27272727  8.36363636  8.45454545  8.54545455
  8.63636364  8.72727273  8.81818182  8.90909091  9.          9.09090909
  9.18181818  9.27272727  9.36363636  9.45454545  9.54545455  9.63636364
  9.72727273  9.81818182  9.90909091 10.        ]
"""

labels = [
    "Constant",
    "Logarithmic",
    "Linear",
    "Log Linear",
    "Quadratic",
    "Cubic",
    "Exponential",
]

big_o = [
    np.ones(num.shape),
    np.log(num),
    num,
    num * np.log(num),
    num**2,
    num**3,
    2**num,
]

# Graphic
plt.figure(figsize=(10, 8))
plt.ylim(0, 100)
for i in range(len(big_o)):
    plt.plot(num, big_o[i], label=labels[i])
plt.legend()
plt.ylabel("Runtime")
plt.xlabel("num")
plt.show()
